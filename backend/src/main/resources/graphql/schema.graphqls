type Report {
    oid: ID!
    project: String!
    hostname: String!
    durationInMillis: String!
    tasks: [Task!]
    tags: [Tag!]
}

type Task {
    oid: ID!
    report: Report!
    path: String!
    startTime: String!
    endTime: String!
    durationInMillis: String!
    status: TaskStatus!
}

type Tag {
    oid: ID!
    report: Report!
    key: String!
    value: String!
}

type Query {
    recentReports(size: Int, page: Int): [Report]!
    report(oid: ID!): Report!
}

input CreateReport {
    project: String!
    hostname: String!
    durationInMillis: String!
    tasks: [CreateTask!]
    tags: [CreateTag!]
}

input CreateTask {
    path: String!
    startTime: String!
    endTime: String!
    durationInMillis: String!
    status: TaskStatus!
}

input CreateTag {
    key: String!
    value: String!
}

type Mutation {
    createReport(report: CreateReport!): Report!
}

enum TaskStatus {
    EXECUTED
    UP_TO_DATE
    FROM_CACHE
    SKIPPED
    FAILED
}
